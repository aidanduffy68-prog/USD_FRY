#!/usr/bin/env python3
"""
Data Manipulation Vulnerability Visual
Shows how the critical weakness works and how we fix it
"""

import matplotlib.pyplot as plt
import matplotlib.patches as patches
from matplotlib.patches import FancyBboxPatch, FancyArrowPatch, Circle
import numpy as np

# Set high DPI for publication quality
plt.rcParams['figure.dpi'] = 300
plt.rcParams['savefig.dpi'] = 300

# Figure size optimized for social media
fig = plt.figure(figsize=(12, 8))
ax = fig.add_subplot(111)
ax.set_xlim(0, 10)
ax.set_ylim(0, 8)
ax.axis('off')

# Background - pure white
ax.set_facecolor('white')

# Title
ax.text(5, 7.5, 'Data Manipulation Vulnerability', 
        ha='center', va='top', fontsize=24, fontweight='bold',
        color='#1a1a1a')

ax.text(5, 7, 'Why 24 fake accounts got through (and how we fix it)',
        ha='center', va='top', fontsize=14, color='#666666')

# Current system (left side)
current_box = FancyBboxPatch((0.5, 1.5), 4, 4.5, 
                           boxstyle="round,pad=0.2", 
                           edgecolor='#dc3545', facecolor='#fff3cd',
                           linewidth=2.5, zorder=1)
ax.add_patch(current_box)

ax.text(2.5, 5.5, 'CURRENT SYSTEM', ha='center', va='bottom',
        fontsize=16, fontweight='bold', color='#856404')

# Three data sources with checkmarks (being fooled)
sources = ['Hyperliquid', 'dYdX', 'Chainlink']
for i, source in enumerate(sources):
    y = 4.5 - i * 0.8
    x = 1.7 + i * 1.6
    
    # Source box
    box = FancyBboxPatch((x-0.4, y-0.25), 0.8, 0.5,
                        boxstyle="round,pad=0.1",
                        edgecolor='#dc3545', facecolor='#ffe5e5',
                        linewidth=1.5)
    ax.add_patch(box)
    
    ax.text(x, y, source, ha='center', va='center',
            fontsize=10, fontweight='bold', color='#856404')
    
    # Checkmark (being fooled)
    ax.text(x, y-0.5, 'âœ“', ha='center', va='center',
            fontsize=20, color='#dc3545')

ax.text(2.5, 2.3, 'Looks legitimate:\nâ€¢ Old account\nâ€¢ High volume\nâ€¢ Multi-chain',
        ha='center', va='top', fontsize=12, color='#856404')

ax.text(2.5, 1.7, '76% detected\n24 slipped through', 
         ha='center', va='top', fontsize=14, fontweight='bold', 
         color='#dc3545')

# Arrow to fixed system
arrow = FancyArrowPatch((4.5, 3.8), (5.5, 3.8),
                       arrowstyle='->', mutation_scale=30,
                       linewidth=3, color='#28a745', zorder=2)
ax.add_patch(arrow)

# Fixed system (right side)
fixed_box = FancyBboxPatch((5.5, 1.5), 4, 4.5, 
                          boxstyle="round,pad=0.2", 
                          edgecolor='#28a745', facecolor='#f0f9ff',
                          linewidth=2.5, zorder=1)
ax.add_patch(fixed_box)

ax.text(7.5, 5.5, 'FIXED SYSTEM', ha='center', va='bottom',
        fontsize=16, fontweight='bold', color='#1a1a1a')

# Five data sources with checkmarks
sources_fixed = ['Hyperliquid', 'dYdX', 'Chainlink', '+ 2 More', '+ AI Detection']
for i, source in enumerate(sources_fixed):
    y = 4.5 - i * 0.6
    x = 6.5
    
    # Source box
    box = FancyBboxPatch((x-0.6, y-0.18), 1.2, 0.36,
                        boxstyle="round,pad=0.1",
                        edgecolor='#28a745', facecolor='#e6f4ff',
                        linewidth=1.5)
    ax.add_patch(box)
    
    ax.text(x, y, source, ha='center', va='center',
            fontsize=9, fontweight='bold', color='#1a1a1a')
    
    # Checkmark
    ax.text(x, y+0.4, 'âœ“', ha='center', va='center',
            fontsize=16, color='#28a745')

ax.text(7.5, 2.3, 'Requires 4 of 5\nsources to agree\n+ AI detection',
        ha='center', va='top', fontsize=12, color='#1a1a1a')

ax.text(7.5, 1.7, 'Target: >95% detection',
        ha='center', va='top', fontsize=14, fontweight='bold', 
        color='#28a745')

# Footer
ax.text(5, 0.5, 'Timeline: 2-4 weeks to deploy fixes', 
        ha='center', va='center', fontsize=11, style='italic', color='#666666')

# Border
border = patches.Rectangle((0.2, 0.2), 9.6, 7.6, 
                          linewidth=2, edgecolor='#e0e0e0', 
                          facecolor='none', zorder=0)
ax.add_patch(border)

plt.tight_layout()
plt.savefig('data_manipulation_vulnerability.png', bbox_inches='tight', 
            facecolor='white', edgecolor='none', pad_inches=0.2)
plt.savefig('data_manipulation_vulnerability.pdf', bbox_inches='tight', 
            facecolor='white', edgecolor='none', pad_inches=0.2)
print("âœ… Data manipulation vulnerability visual generated!")
print("ðŸ“„ Files: data_manipulation_vulnerability.png, data_manipulation_vulnerability.pdf")

